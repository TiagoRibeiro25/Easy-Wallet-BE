package handlers

import (
	controllers "easy-wallet-be/src/controllers/user"
	"easy-wallet-be/src/models"
	"easy-wallet-be/src/utils"
	"net/http"

	"github.com/labstack/echo/v4"
)

// VerifyUser handles the verification of a user's account using a token.
// It receives a token as a parameter from the request URL and validates it using the ValidateToken function from the utils package.
// If the token is invalid, it returns a bad request response with an error message.
// If the token is valid, it calls the VerifyUserByToken function from the controllers package to verify the user's account.
// If the verification is successful, it returns a success response with a message indicating that the user has been verified.
// If the verification fails, it returns a not found response with an error message indicating that the user was not found.
func VerifyUser(c echo.Context) error {
	token := c.Param("token")

	// Verify if the token was generated by the GenerateToken function
	if !utils.ValidateToken(token) {
		return utils.HandleResponse(
			c,
			http.StatusBadRequest,
			"Invalid token",
			nil,
		)
	}

	// Verify the user
	userID, err := controllers.VerifyUserByToken(token)
	if err != nil {
		return utils.HandleResponse(
			c,
			http.StatusNotFound,
			err.Error(),
			nil,
		)
	}

	// Create the default categories for the user
	if err := models.AddDefaultCategories(userID); err != nil {
		return utils.HandleResponse(
			c,
			http.StatusInternalServerError,
			"Something went wrong",
			nil,
		)
	}

	return utils.HandleResponse(
		c,
		http.StatusOK,
		"User verified successfully",
		nil,
	)
}
